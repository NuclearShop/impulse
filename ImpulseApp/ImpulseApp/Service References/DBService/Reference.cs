//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImpulseApp.DBService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBService.IDBService")]
    public interface IDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserAds", ReplyAction="http://tempuri.org/IDBService/GetUserAdsResponse")]
        System.Collections.Generic.List<ImpulseApp.Models.AdModels.SimpleAdModel> GetUserAds(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserAds", ReplyAction="http://tempuri.org/IDBService/GetUserAdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.AdModels.SimpleAdModel>> GetUserAdsAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdByUrl", ReplyAction="http://tempuri.org/IDBService/GetAdByUrlResponse")]
        ImpulseApp.Models.AdModels.SimpleAdModel GetAdByUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdByUrl", ReplyAction="http://tempuri.org/IDBService/GetAdByUrlResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdById", ReplyAction="http://tempuri.org/IDBService/GetAdByIdResponse")]
        ImpulseApp.Models.AdModels.SimpleAdModel GetAdById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdById", ReplyAction="http://tempuri.org/IDBService/GetAdByIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAd", ReplyAction="http://tempuri.org/IDBService/SaveAdResponse")]
        string SaveAd(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAd", ReplyAction="http://tempuri.org/IDBService/SaveAdResponse")]
        System.Threading.Tasks.Task<string> SaveAdAsync(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetSessionsByAdId", ReplyAction="http://tempuri.org/IDBService/GetSessionsByAdIdResponse")]
        System.Collections.Generic.List<ImpulseApp.Models.StatModels.AdSession> GetSessionsByAdId(int AdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetSessionsByAdId", ReplyAction="http://tempuri.org/IDBService/GetSessionsByAdIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.AdSession>> GetSessionsByAdIdAsync(int AdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdSession", ReplyAction="http://tempuri.org/IDBService/SaveAdSessionResponse")]
        string SaveAdSession(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdSession", ReplyAction="http://tempuri.org/IDBService/SaveAdSessionResponse")]
        System.Threading.Tasks.Task<string> SaveAdSessionAsync(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetActivityBySessionId", ReplyAction="http://tempuri.org/IDBService/GetActivityBySessionIdResponse")]
        System.Collections.Generic.List<ImpulseApp.Models.StatModels.Activity> GetActivityBySessionId(int SessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetActivityBySessionId", ReplyAction="http://tempuri.org/IDBService/GetActivityBySessionIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.Activity>> GetActivityBySessionIdAsync(int SessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveActivity", ReplyAction="http://tempuri.org/IDBService/SaveActivityResponse")]
        string SaveActivity(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveActivity", ReplyAction="http://tempuri.org/IDBService/SaveActivityResponse")]
        System.Threading.Tasks.Task<string> SaveActivityAsync(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetClicksByActivityId", ReplyAction="http://tempuri.org/IDBService/GetClicksByActivityIdResponse")]
        System.Collections.Generic.List<ImpulseApp.Models.StatModels.Click> GetClicksByActivityId(int ActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetClicksByActivityId", ReplyAction="http://tempuri.org/IDBService/GetClicksByActivityIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.Click>> GetClicksByActivityIdAsync(int ActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveClick", ReplyAction="http://tempuri.org/IDBService/SaveClickResponse")]
        string SaveClick(ImpulseApp.Models.StatModels.Click model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveClick", ReplyAction="http://tempuri.org/IDBService/SaveClickResponse")]
        System.Threading.Tasks.Task<string> SaveClickAsync(ImpulseApp.Models.StatModels.Click model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveVideo", ReplyAction="http://tempuri.org/IDBService/SaveVideoResponse")]
        string SaveVideo(ImpulseApp.Models.AdModels.VideoUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveVideo", ReplyAction="http://tempuri.org/IDBService/SaveVideoResponse")]
        System.Threading.Tasks.Task<string> SaveVideoAsync(ImpulseApp.Models.AdModels.VideoUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserVideo", ReplyAction="http://tempuri.org/IDBService/GetUserVideoResponse")]
        System.Collections.Generic.List<ImpulseApp.Models.AdModels.VideoUnit> GetUserVideo(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserVideo", ReplyAction="http://tempuri.org/IDBService/GetUserVideoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.AdModels.VideoUnit>> GetUserVideoAsync(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBServiceChannel : ImpulseApp.DBService.IDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBServiceClient : System.ServiceModel.ClientBase<ImpulseApp.DBService.IDBService>, ImpulseApp.DBService.IDBService {
        
        public DBServiceClient() {
        }
        
        public DBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ImpulseApp.Models.AdModels.SimpleAdModel> GetUserAds(string UserId) {
            return base.Channel.GetUserAds(UserId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.AdModels.SimpleAdModel>> GetUserAdsAsync(string UserId) {
            return base.Channel.GetUserAdsAsync(UserId);
        }
        
        public ImpulseApp.Models.AdModels.SimpleAdModel GetAdByUrl(string url) {
            return base.Channel.GetAdByUrl(url);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByUrlAsync(string url) {
            return base.Channel.GetAdByUrlAsync(url);
        }
        
        public ImpulseApp.Models.AdModels.SimpleAdModel GetAdById(int id) {
            return base.Channel.GetAdById(id);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByIdAsync(int id) {
            return base.Channel.GetAdByIdAsync(id);
        }
        
        public string SaveAd(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB) {
            return base.Channel.SaveAd(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdAsync(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB) {
            return base.Channel.SaveAdAsync(model, proceedToDB);
        }
        
        public System.Collections.Generic.List<ImpulseApp.Models.StatModels.AdSession> GetSessionsByAdId(int AdId) {
            return base.Channel.GetSessionsByAdId(AdId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.AdSession>> GetSessionsByAdIdAsync(int AdId) {
            return base.Channel.GetSessionsByAdIdAsync(AdId);
        }
        
        public string SaveAdSession(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB) {
            return base.Channel.SaveAdSession(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdSessionAsync(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB) {
            return base.Channel.SaveAdSessionAsync(model, proceedToDB);
        }
        
        public System.Collections.Generic.List<ImpulseApp.Models.StatModels.Activity> GetActivityBySessionId(int SessionId) {
            return base.Channel.GetActivityBySessionId(SessionId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.Activity>> GetActivityBySessionIdAsync(int SessionId) {
            return base.Channel.GetActivityBySessionIdAsync(SessionId);
        }
        
        public string SaveActivity(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB) {
            return base.Channel.SaveActivity(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveActivityAsync(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB) {
            return base.Channel.SaveActivityAsync(model, proceedToDB);
        }
        
        public System.Collections.Generic.List<ImpulseApp.Models.StatModels.Click> GetClicksByActivityId(int ActivityId) {
            return base.Channel.GetClicksByActivityId(ActivityId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.StatModels.Click>> GetClicksByActivityIdAsync(int ActivityId) {
            return base.Channel.GetClicksByActivityIdAsync(ActivityId);
        }
        
        public string SaveClick(ImpulseApp.Models.StatModels.Click model, bool proceedToDB) {
            return base.Channel.SaveClick(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveClickAsync(ImpulseApp.Models.StatModels.Click model, bool proceedToDB) {
            return base.Channel.SaveClickAsync(model, proceedToDB);
        }
        
        public string SaveVideo(ImpulseApp.Models.AdModels.VideoUnit model) {
            return base.Channel.SaveVideo(model);
        }
        
        public System.Threading.Tasks.Task<string> SaveVideoAsync(ImpulseApp.Models.AdModels.VideoUnit model) {
            return base.Channel.SaveVideoAsync(model);
        }
        
        public System.Collections.Generic.List<ImpulseApp.Models.AdModels.VideoUnit> GetUserVideo(string UserName) {
            return base.Channel.GetUserVideo(UserName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ImpulseApp.Models.AdModels.VideoUnit>> GetUserVideoAsync(string UserName) {
            return base.Channel.GetUserVideoAsync(UserName);
        }
    }
}
