//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StubMethods.DatabaseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatabaseService.IDBService")]
    public interface IDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserAds", ReplyAction="http://tempuri.org/IDBService/GetUserAdsResponse")]
        ImpulseApp.Models.AdModels.SimpleAdModel[] GetUserAds(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserAds", ReplyAction="http://tempuri.org/IDBService/GetUserAdsResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel[]> GetUserAdsAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdByUrl", ReplyAction="http://tempuri.org/IDBService/GetAdByUrlResponse")]
        ImpulseApp.Models.AdModels.SimpleAdModel GetAdByUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdByUrl", ReplyAction="http://tempuri.org/IDBService/GetAdByUrlResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdById", ReplyAction="http://tempuri.org/IDBService/GetAdByIdResponse")]
        ImpulseApp.Models.AdModels.SimpleAdModel GetAdById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAdById", ReplyAction="http://tempuri.org/IDBService/GetAdByIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/RemoveAdById", ReplyAction="http://tempuri.org/IDBService/RemoveAdByIdResponse")]
        void RemoveAdById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/RemoveAdById", ReplyAction="http://tempuri.org/IDBService/RemoveAdByIdResponse")]
        System.Threading.Tasks.Task RemoveAdByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/RemoveAdByUrl", ReplyAction="http://tempuri.org/IDBService/RemoveAdByUrlResponse")]
        void RemoveAdByUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/RemoveAdByUrl", ReplyAction="http://tempuri.org/IDBService/RemoveAdByUrlResponse")]
        System.Threading.Tasks.Task RemoveAdByUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAd", ReplyAction="http://tempuri.org/IDBService/SaveAdResponse")]
        string SaveAd(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAd", ReplyAction="http://tempuri.org/IDBService/SaveAdResponse")]
        System.Threading.Tasks.Task<string> SaveAdAsync(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetSessionsByAdId", ReplyAction="http://tempuri.org/IDBService/GetSessionsByAdIdResponse")]
        ImpulseApp.Models.StatModels.AdSession[] GetSessionsByAdId(int AdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetSessionsByAdId", ReplyAction="http://tempuri.org/IDBService/GetSessionsByAdIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.AdSession[]> GetSessionsByAdIdAsync(int AdId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdSession", ReplyAction="http://tempuri.org/IDBService/SaveAdSessionResponse")]
        string SaveAdSession(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdSession", ReplyAction="http://tempuri.org/IDBService/SaveAdSessionResponse")]
        System.Threading.Tasks.Task<string> SaveAdSessionAsync(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetActivityBySessionId", ReplyAction="http://tempuri.org/IDBService/GetActivityBySessionIdResponse")]
        ImpulseApp.Models.StatModels.Activity[] GetActivityBySessionId(int SessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetActivityBySessionId", ReplyAction="http://tempuri.org/IDBService/GetActivityBySessionIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.Activity[]> GetActivityBySessionIdAsync(int SessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveActivity", ReplyAction="http://tempuri.org/IDBService/SaveActivityResponse")]
        string SaveActivity(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveActivity", ReplyAction="http://tempuri.org/IDBService/SaveActivityResponse")]
        System.Threading.Tasks.Task<string> SaveActivityAsync(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetClicksByActivityId", ReplyAction="http://tempuri.org/IDBService/GetClicksByActivityIdResponse")]
        ImpulseApp.Models.StatModels.Click[] GetClicksByActivityId(int ActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetClicksByActivityId", ReplyAction="http://tempuri.org/IDBService/GetClicksByActivityIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.Click[]> GetClicksByActivityIdAsync(int ActivityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveClick", ReplyAction="http://tempuri.org/IDBService/SaveClickResponse")]
        string SaveClick(ImpulseApp.Models.StatModels.Click model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveClick", ReplyAction="http://tempuri.org/IDBService/SaveClickResponse")]
        System.Threading.Tasks.Task<string> SaveClickAsync(ImpulseApp.Models.StatModels.Click model, bool proceedToDB);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveVideo", ReplyAction="http://tempuri.org/IDBService/SaveVideoResponse")]
        string SaveVideo(ImpulseApp.Models.AdModels.VideoUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveVideo", ReplyAction="http://tempuri.org/IDBService/SaveVideoResponse")]
        System.Threading.Tasks.Task<string> SaveVideoAsync(ImpulseApp.Models.AdModels.VideoUnit model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserVideo", ReplyAction="http://tempuri.org/IDBService/GetUserVideoResponse")]
        ImpulseApp.Models.AdModels.VideoUnit[] GetUserVideo(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetUserVideo", ReplyAction="http://tempuri.org/IDBService/GetUserVideoResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.VideoUnit[]> GetUserVideoAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetVideoById", ReplyAction="http://tempuri.org/IDBService/GetVideoByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VideoNotFoundException), Action="http://tempuri.org/IDBService/GetVideoByIdVideoNotFoundExceptionFault", Name="VideoNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        ImpulseApp.Models.AdModels.VideoUnit GetVideoById(string UserName, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetVideoById", ReplyAction="http://tempuri.org/IDBService/GetVideoByIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.VideoUnit> GetVideoByIdAsync(string UserName, int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetStateByAdIdAndVideoId", ReplyAction="http://tempuri.org/IDBService/GetStateByAdIdAndVideoIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VideoNotFoundException), Action="http://tempuri.org/IDBService/GetStateByAdIdAndVideoIdVideoNotFoundExceptionFault" +
            "", Name="VideoNotFoundException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        ImpulseApp.Models.AdModels.AdState GetStateByAdIdAndVideoId(int adId, int videoId, string stateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetStateByAdIdAndVideoId", ReplyAction="http://tempuri.org/IDBService/GetStateByAdIdAndVideoIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.AdState> GetStateByAdIdAndVideoIdAsync(int adId, int videoId, string stateName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByEntity", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByEntityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SaveAdVersioningByEntityVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAdVersioningByEntity(ImpulseApp.Models.AdModels.Versioning versioning);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByEntity", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByEntityResponse")]
        System.Threading.Tasks.Task<string> SaveAdVersioningByEntityAsync(ImpulseApp.Models.AdModels.Versioning versioning);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByIds", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SaveAdVersioningByIdsVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAdVersioningByIds(int rootId, int childId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByIds", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByIdsResponse")]
        System.Threading.Tasks.Task<string> SaveAdVersioningByIdsAsync(int rootId, int childId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByIdAndUrl", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByIdAndUrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SaveAdVersioningByIdAndUrlVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAdVersioningByIdAndUrl(int rootId, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByIdAndUrl", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByIdAndUrlResponse")]
        System.Threading.Tasks.Task<string> SaveAdVersioningByIdAndUrlAsync(int rootId, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByPreviousIdAndUrl", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByPreviousIdAndUrlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SaveAdVersioningByPreviousIdAndUrlVersioningExcepti" +
            "onFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAdVersioningByPreviousIdAndUrl(int prevId, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByPreviousIdAndUrl", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByPreviousIdAndUrlResponse")]
        System.Threading.Tasks.Task<string> SaveAdVersioningByPreviousIdAndUrlAsync(int prevId, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByUrls", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByUrlsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SaveAdVersioningByUrlsVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAdVersioningByUrls(string rootUrl, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAdVersioningByUrls", ReplyAction="http://tempuri.org/IDBService/SaveAdVersioningByUrlsResponse")]
        System.Threading.Tasks.Task<string> SaveAdVersioningByUrlsAsync(string rootUrl, string childUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/IsRoot", ReplyAction="http://tempuri.org/IDBService/IsRootResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/IsRootVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        bool IsRoot(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/IsRoot", ReplyAction="http://tempuri.org/IDBService/IsRootResponse")]
        System.Threading.Tasks.Task<bool> IsRootAsync(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetRootAdId", ReplyAction="http://tempuri.org/IDBService/GetRootAdIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/GetRootAdIdVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        int GetRootAdId(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetRootAdId", ReplyAction="http://tempuri.org/IDBService/GetRootAdIdResponse")]
        System.Threading.Tasks.Task<int> GetRootAdIdAsync(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetChildAds", ReplyAction="http://tempuri.org/IDBService/GetChildAdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/GetChildAdsVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        ImpulseApp.Models.DTO.VersioningDTO[] GetChildAds(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetChildAds", ReplyAction="http://tempuri.org/IDBService/GetChildAdsResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.DTO.VersioningDTO[]> GetChildAdsAsync(int adId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAbTest", ReplyAction="http://tempuri.org/IDBService/SaveAbTestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.AbTestException), Action="http://tempuri.org/IDBService/SaveAbTestAbTestExceptionFault", Name="AbTestException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SaveAbTest(ImpulseApp.Models.AdModels.ABTest test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SaveAbTest", ReplyAction="http://tempuri.org/IDBService/SaveAbTestResponse")]
        System.Threading.Tasks.Task<string> SaveAbTestAsync(ImpulseApp.Models.AdModels.ABTest test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAbTestByUrl", ReplyAction="http://tempuri.org/IDBService/GetAbTestByUrlResponse")]
        ImpulseApp.Models.AdModels.ABTest GetAbTestByUrl(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAbTestByUrl", ReplyAction="http://tempuri.org/IDBService/GetAbTestByUrlResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest> GetAbTestByUrlAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAbTestById", ReplyAction="http://tempuri.org/IDBService/GetAbTestByIdResponse")]
        ImpulseApp.Models.AdModels.ABTest GetAbTestById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAbTestById", ReplyAction="http://tempuri.org/IDBService/GetAbTestByIdResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest> GetAbTestByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllActiveTests", ReplyAction="http://tempuri.org/IDBService/GetAllActiveTestsResponse")]
        ImpulseApp.Models.AdModels.ABTest[] GetAllActiveTests(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/GetAllActiveTests", ReplyAction="http://tempuri.org/IDBService/GetAllActiveTestsResponse")]
        System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest[]> GetAllActiveTestsAsync(string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SetActiveByAdId", ReplyAction="http://tempuri.org/IDBService/SetActiveByAdIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ImpulseApp.Models.Exceptions.VersioningException), Action="http://tempuri.org/IDBService/SetActiveByAdIdVersioningExceptionFault", Name="VersioningException", Namespace="http://schemas.datacontract.org/2004/07/ImpulseApp.Models.Exceptions")]
        string SetActiveByAdId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBService/SetActiveByAdId", ReplyAction="http://tempuri.org/IDBService/SetActiveByAdIdResponse")]
        System.Threading.Tasks.Task<string> SetActiveByAdIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBServiceChannel : StubMethods.DatabaseService.IDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBServiceClient : System.ServiceModel.ClientBase<StubMethods.DatabaseService.IDBService>, StubMethods.DatabaseService.IDBService {
        
        public DBServiceClient() {
        }
        
        public DBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ImpulseApp.Models.AdModels.SimpleAdModel[] GetUserAds(string UserId) {
            return base.Channel.GetUserAds(UserId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel[]> GetUserAdsAsync(string UserId) {
            return base.Channel.GetUserAdsAsync(UserId);
        }
        
        public ImpulseApp.Models.AdModels.SimpleAdModel GetAdByUrl(string url) {
            return base.Channel.GetAdByUrl(url);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByUrlAsync(string url) {
            return base.Channel.GetAdByUrlAsync(url);
        }
        
        public ImpulseApp.Models.AdModels.SimpleAdModel GetAdById(int id) {
            return base.Channel.GetAdById(id);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.SimpleAdModel> GetAdByIdAsync(int id) {
            return base.Channel.GetAdByIdAsync(id);
        }
        
        public void RemoveAdById(int id) {
            base.Channel.RemoveAdById(id);
        }
        
        public System.Threading.Tasks.Task RemoveAdByIdAsync(int id) {
            return base.Channel.RemoveAdByIdAsync(id);
        }
        
        public void RemoveAdByUrl(string url) {
            base.Channel.RemoveAdByUrl(url);
        }
        
        public System.Threading.Tasks.Task RemoveAdByUrlAsync(string url) {
            return base.Channel.RemoveAdByUrlAsync(url);
        }
        
        public string SaveAd(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB) {
            return base.Channel.SaveAd(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdAsync(ImpulseApp.Models.AdModels.SimpleAdModel model, bool proceedToDB) {
            return base.Channel.SaveAdAsync(model, proceedToDB);
        }
        
        public ImpulseApp.Models.StatModels.AdSession[] GetSessionsByAdId(int AdId) {
            return base.Channel.GetSessionsByAdId(AdId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.AdSession[]> GetSessionsByAdIdAsync(int AdId) {
            return base.Channel.GetSessionsByAdIdAsync(AdId);
        }
        
        public string SaveAdSession(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB) {
            return base.Channel.SaveAdSession(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdSessionAsync(ImpulseApp.Models.StatModels.AdSession model, bool proceedToDB) {
            return base.Channel.SaveAdSessionAsync(model, proceedToDB);
        }
        
        public ImpulseApp.Models.StatModels.Activity[] GetActivityBySessionId(int SessionId) {
            return base.Channel.GetActivityBySessionId(SessionId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.Activity[]> GetActivityBySessionIdAsync(int SessionId) {
            return base.Channel.GetActivityBySessionIdAsync(SessionId);
        }
        
        public string SaveActivity(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB) {
            return base.Channel.SaveActivity(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveActivityAsync(ImpulseApp.Models.StatModels.Activity model, bool proceedToDB) {
            return base.Channel.SaveActivityAsync(model, proceedToDB);
        }
        
        public ImpulseApp.Models.StatModels.Click[] GetClicksByActivityId(int ActivityId) {
            return base.Channel.GetClicksByActivityId(ActivityId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.StatModels.Click[]> GetClicksByActivityIdAsync(int ActivityId) {
            return base.Channel.GetClicksByActivityIdAsync(ActivityId);
        }
        
        public string SaveClick(ImpulseApp.Models.StatModels.Click model, bool proceedToDB) {
            return base.Channel.SaveClick(model, proceedToDB);
        }
        
        public System.Threading.Tasks.Task<string> SaveClickAsync(ImpulseApp.Models.StatModels.Click model, bool proceedToDB) {
            return base.Channel.SaveClickAsync(model, proceedToDB);
        }
        
        public string SaveVideo(ImpulseApp.Models.AdModels.VideoUnit model) {
            return base.Channel.SaveVideo(model);
        }
        
        public System.Threading.Tasks.Task<string> SaveVideoAsync(ImpulseApp.Models.AdModels.VideoUnit model) {
            return base.Channel.SaveVideoAsync(model);
        }
        
        public ImpulseApp.Models.AdModels.VideoUnit[] GetUserVideo(string UserName) {
            return base.Channel.GetUserVideo(UserName);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.VideoUnit[]> GetUserVideoAsync(string UserName) {
            return base.Channel.GetUserVideoAsync(UserName);
        }
        
        public ImpulseApp.Models.AdModels.VideoUnit GetVideoById(string UserName, int Id) {
            return base.Channel.GetVideoById(UserName, Id);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.VideoUnit> GetVideoByIdAsync(string UserName, int Id) {
            return base.Channel.GetVideoByIdAsync(UserName, Id);
        }
        
        public ImpulseApp.Models.AdModels.AdState GetStateByAdIdAndVideoId(int adId, int videoId, string stateName) {
            return base.Channel.GetStateByAdIdAndVideoId(adId, videoId, stateName);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.AdState> GetStateByAdIdAndVideoIdAsync(int adId, int videoId, string stateName) {
            return base.Channel.GetStateByAdIdAndVideoIdAsync(adId, videoId, stateName);
        }
        
        public string SaveAdVersioningByEntity(ImpulseApp.Models.AdModels.Versioning versioning) {
            return base.Channel.SaveAdVersioningByEntity(versioning);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdVersioningByEntityAsync(ImpulseApp.Models.AdModels.Versioning versioning) {
            return base.Channel.SaveAdVersioningByEntityAsync(versioning);
        }
        
        public string SaveAdVersioningByIds(int rootId, int childId) {
            return base.Channel.SaveAdVersioningByIds(rootId, childId);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdVersioningByIdsAsync(int rootId, int childId) {
            return base.Channel.SaveAdVersioningByIdsAsync(rootId, childId);
        }
        
        public string SaveAdVersioningByIdAndUrl(int rootId, string childUrl) {
            return base.Channel.SaveAdVersioningByIdAndUrl(rootId, childUrl);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdVersioningByIdAndUrlAsync(int rootId, string childUrl) {
            return base.Channel.SaveAdVersioningByIdAndUrlAsync(rootId, childUrl);
        }
        
        public string SaveAdVersioningByPreviousIdAndUrl(int prevId, string childUrl) {
            return base.Channel.SaveAdVersioningByPreviousIdAndUrl(prevId, childUrl);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdVersioningByPreviousIdAndUrlAsync(int prevId, string childUrl) {
            return base.Channel.SaveAdVersioningByPreviousIdAndUrlAsync(prevId, childUrl);
        }
        
        public string SaveAdVersioningByUrls(string rootUrl, string childUrl) {
            return base.Channel.SaveAdVersioningByUrls(rootUrl, childUrl);
        }
        
        public System.Threading.Tasks.Task<string> SaveAdVersioningByUrlsAsync(string rootUrl, string childUrl) {
            return base.Channel.SaveAdVersioningByUrlsAsync(rootUrl, childUrl);
        }
        
        public bool IsRoot(int adId) {
            return base.Channel.IsRoot(adId);
        }
        
        public System.Threading.Tasks.Task<bool> IsRootAsync(int adId) {
            return base.Channel.IsRootAsync(adId);
        }
        
        public int GetRootAdId(int adId) {
            return base.Channel.GetRootAdId(adId);
        }
        
        public System.Threading.Tasks.Task<int> GetRootAdIdAsync(int adId) {
            return base.Channel.GetRootAdIdAsync(adId);
        }
        
        public ImpulseApp.Models.DTO.VersioningDTO[] GetChildAds(int adId) {
            return base.Channel.GetChildAds(adId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.DTO.VersioningDTO[]> GetChildAdsAsync(int adId) {
            return base.Channel.GetChildAdsAsync(adId);
        }
        
        public string SaveAbTest(ImpulseApp.Models.AdModels.ABTest test) {
            return base.Channel.SaveAbTest(test);
        }
        
        public System.Threading.Tasks.Task<string> SaveAbTestAsync(ImpulseApp.Models.AdModels.ABTest test) {
            return base.Channel.SaveAbTestAsync(test);
        }
        
        public ImpulseApp.Models.AdModels.ABTest GetAbTestByUrl(string url) {
            return base.Channel.GetAbTestByUrl(url);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest> GetAbTestByUrlAsync(string url) {
            return base.Channel.GetAbTestByUrlAsync(url);
        }
        
        public ImpulseApp.Models.AdModels.ABTest GetAbTestById(int id) {
            return base.Channel.GetAbTestById(id);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest> GetAbTestByIdAsync(int id) {
            return base.Channel.GetAbTestByIdAsync(id);
        }
        
        public ImpulseApp.Models.AdModels.ABTest[] GetAllActiveTests(string UserId) {
            return base.Channel.GetAllActiveTests(UserId);
        }
        
        public System.Threading.Tasks.Task<ImpulseApp.Models.AdModels.ABTest[]> GetAllActiveTestsAsync(string UserId) {
            return base.Channel.GetAllActiveTestsAsync(UserId);
        }
        
        public string SetActiveByAdId(int id) {
            return base.Channel.SetActiveByAdId(id);
        }
        
        public System.Threading.Tasks.Task<string> SetActiveByAdIdAsync(int id) {
            return base.Channel.SetActiveByAdIdAsync(id);
        }
    }
}
